# Use an official Golang image as a base image
FROM golang:1.22-alpine AS builder

# Install necessary dependencies
RUN apk add --no-cache git make bash curl

# Set the working directory for IPFS Kubo
WORKDIR /go/src/ipfs-kubo

# Clone the IPFS Kubo repository
RUN git clone https://github.com/ipfs/kubo.git .

# Checkout the specific version v0.29.0
RUN git checkout v0.29.0

# Build IPFS Kubo
RUN make build

# Set the working directory for the light-client
WORKDIR /go/src/light-client

RUN apk add --no-cache gcc musl-dev

# Clone the light-client repository
COPY . .

# Initialize submodules
RUN git submodule update --init --recursive

# Build the light-client
RUN make build-light

# Create a minimal runtime image
FROM alpine:latest

# Copy the built IPFS Kubo binary
COPY --from=builder /go/src/ipfs-kubo/cmd/ipfs/ipfs /usr/local/bin/ipfs

# Copy the built light-client binary
COPY --from=builder /go/src/light-client/bin/light-client /usr/local/bin/light-client

# Copy trusted setup files
COPY --from=builder /go/src/light-client/test/data/trusted_setup.txt /root/.covalent/trusted_setup.txt

# Expose the default IPFS port
EXPOSE 4001

# Expose the default IPFS API port
EXPOSE 5001

# Expose the default IPFS Gateway port
EXPOSE 8080

# Initialize IPFS
RUN ipfs init

# Copy the entrypoint script
COPY scripts/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Set the entrypoint for the container
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]